## 톰캣 관련 설정 및 데이터베이스 관련 설정한다
spring.application.name=board

## http://192.168.111.105:80
server.port=80

## 로그 레벨 조정 -> log4j2.xml로 대체함. (교재 142쪽)
logging.level.org.springframework=info
logging.level.org.mbc=debug


## 데이터 베이스(하이디) 관련 1,2단계 설정
#/* 구분자를 ";" 으(로) 변경*/
#/* 127.0.0.1 에 MariaDB or MySQL (TCP/IP) 을(를) 통해 연결 중, 사용자 이름 "root", 암호사용: Yes.. */
#SELECT CONNECTION_ID();
#/* 문자 집합: utf8mb4 */
#SHOW /*!50002 GLOBAL */ STATUS;
#SELECT NOW();
#SHOW VARIABLES;
#/* 연결됨. 스레드-ID: 3 */
#SHOW TABLES FROM `information_schema`;
#SHOW DATABASES;
#/* "root" 세션 시작 */
#SHOW COLLATION;
#CREATE DATABASE `bootex` /*!40100 COLLATE 'utf8_general_ci' */;
#SHOW DATABASES;
#/* "root" 세션 시작 */
#FLUSH PRIVILEGES;
#SHOW COLUMNS FROM `mysql`.`user`;
#SELECT `user`, `host`, IF(LENGTH(password)>0, password, authentication_string) AS `password` FROM `mysql`.`user`;
#CREATE USER 'bootuser'@'%' IDENTIFIED BY 'bootuser';
#GRANT USAGE ON *.* TO 'bootuser'@'%';
#GRANT EXECUTE, SELECT, SHOW VIEW, ALTER, ALTER ROUTINE, CREATE, CREATE ROUTINE, CREATE TEMPORARY TABLES, CREATE VIEW, DELETE, DROP, EVENT, INDEX, INSERT, REFERENCES, TRIGGER, UPDATE, LOCK TABLES  ON `bootex`.* TO 'bootuser'@'%' WITH GRANT OPTION;
#FLUSH PRIVILEGES;
#SHOW GRANTS FOR 'bootuser'@'%';

## 데이터베이스 관련 1,2단게 설정
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
spring.datasource.url=jdbc:mariadb://localhost:3306/bootex
spring.datasource.username=bootuser
spring.datasource.password=bootuser

##jpa 관련 설정 추가(jpa : orm 에서 시작되었다.) 데이터베이스도 객체형으로 보자

spring.jpa.hibernate.ddl-auto=update
##update : 기존과 다른 테이블이 검증되면 drop 후 create 한다.
##none : 테이블 구조를 변경하지 않는다.
##create : 실행할 때마다 테이블을 새로 만든다.
##create-drop : 실행할 때 테이블을 새로 만들고 종료할 때 drop
##validate : 변경된 부분만 콘솔만 알려줌(구조 변경 안 함)

spring.jpa.properties.hibernate.format_sql=true
## 콘솔에 sql 쿼리문을 보여줌

spring.jpa.show-sql=true
## jpa가 하는 일을 보여줌
